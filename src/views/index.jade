!!! 5
//if IE 7
  html(lang="en", class="no-js ie", data-ng-app="main", id="ng-app")
//if IE 8
  html(lang="en", class="no-js ie", data-ng-app="main", id="ng-app")
//if IE 9
  html(lang="en", class="no-js ie9", data-ng-app="main", id="ng-app")
//if [(gt IE 9)|!(IE)] <!
html(class="no-js", ng-app="main")
  // <![endif]
  head
    meta(charset="utf-8")
    title No-Nonsense NoSQL
    meta(name="viewport", content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no")
    meta(name="apple-mobile-web-app-capable", content="yes")
    meta(name="apple-mobile-web-app-status-bar-style", content="black-translucent")
    meta(name="description", content="No-nonsense NoSQL")
    link(href="./assets/css/style.css", rel="stylesheet", type="text/css")

  body
    .reveal
      .opi-logo
      .slides
        section(data-state="index-slide")
          h1 No-Nonsense NoSQL
          small by Jenn Strater <a href="http://twitter.com/jennstrater" target="_blank"><img style="border:none;margin-top:0px;box-shadow:none;" src="./assets/img/CompanyAndProductLogos/twitter.png"/>@jennstrater</a>
        section(data-state="github-slide", class="github-section")
          h1 <i class="fa fa-icon fa-github"></i>
          p Current
          p
            a(href="http://jlstrater.github.io/No-Nonsense-NoSQL") http://jlstrater.github.io/No-Nonsense-NoSQL
          p
            a(href="http://github.com/jlstrater/no-nonsense-nosql",target="_blank") Slides(source)
        section(data-state="github-slide", class="github-section")
          h1 <i class="fa fa-icon fa-github"></i>
          p Previous Versions
          p Greach
            a(href="https://github.com/jlstrater/No-Nonsense-NoSQL/releases/tag/1.0") Source |
            a(href="Greach2015") Slides
          p Iowa Code Camp
            a(href="https://github.com/jlstrater/No-Nonsense-NoSQL/releases/tag/2.0") Source |
            a(href="IowaCodeCamp15") Slides
          p Gr8Conf EU
            a(href="https://github.com/jlstrater/No-Nonsense-NoSQL/releases/tag/3.0") Source |
            a(href="Gr8ConfEU2015") Slides

        section
          h2 About Me
          p Professional
          ul.ul-no-style
            li.
              <img class="inline-img" src='./assets/img/opi-square-logo.png' style='vertical-align:middle;'>
              Senior Consultant - <a href="http://objectpartners.com" target="_blank" style='vertical-align:middle'>Object Partners</a>
            li.
              <img class="inline-img" src='./assets/img/gr8ladies.png' style='vertical-align:middle;'>
              Co-Founder - <a href="http://www.gr8ladies.org" target="_blank" style='vertical-align:middle'>Gr8Ladies</a>

        section
          h2 About Me
          p Experience
          img(src='./assets/img/techbooks.jpg')
          small source: http://tjvantoll.com/2014/12/29/so-you-want-to-write-a-tech-book/

        section
          h2 About Me
          p Minneapolis, MN
          p <img src='./assets/img/minnesota.png' style="border:none;margin-top:-25px;">
          ul.ul-no-style Connect on Social Media
            li <a href="https://twitter.com/jennstrater" target="_blank">Twitter</a> @jennstrater
            li <a href="https://linkedin.com/in/jennstrater" target="_blank">LinkedIn</a> https://linkedin.com/in/jennstrater
            li <a href="https://github.com/jlstrater" target="_blank">Github</a> https://github.com/jlstrater

        section
          p <img src='./assets/img/secondhandhounds.png' style="border:none; width:12%; height:12%">
          h3 Pet Mom & Foster
          table(align="center")
            tr
              td Pumpkin
              td <img class="inline-img" src='./assets/img/pumpkinloaf.jpg' style="border:none;">
              td Halo
              td <img class="inline-img" src='./assets/img/halofunnyface.jpg' style="border:none;">
              td Gia
              td <img class="inline-img" src='./assets/img/gia.jpg' style="border:none;">
            tr
              td Curly
              td <img class="inline-img" src='./assets/img/halofunnyface.jpg' style="border:none;">
              td Juliet
              td <img class="inline-img" src='./assets/img/juliet.jpg' style="border:none;">
              td Elway
              td <img class="inline-img" src='./assets/img/elway.jpg' style="border:none;">

        section
          h2 Agenda
          table
            tr
              td
                ul
                  li Review of Relational Databases
                  li Gr8Ladies Example Application
                  li NoSQL Definition
                  li Types of NoSQL data stores
                  li Example
                  ul
                    li MongoDB
                    li Redis
              td
                img(src='./assets/img/gia-clipboard.jpg')

        section
          h2 What will NOT be covered
          ul
            li Every aspect of every NoSQL solution
            li Implementation, maintenance, or scaling of NoSql databases
            li Non-operational solutions
            ul
              li Search(i.e. Elasticsearch)
              li File systems And Processing(i.e Hadoop)

        section
          section
            h1 Review
            img(src='./assets/img/catmeeting.jpg')
          section
            h2 Relational Databases
            ul
              li Tabular
              li Defined Schema
              li Relationships between data
              li Terms
              ul
                li Database
                li Table
                li Row
                li Column
          section
            h2 ACID
            img(src='./assets/img/acid.png')
            ul
              li Atomicity
              li Consistency
              li Isolation
              li Durability
          section
            img(src='./assets/img/groovy-logo.png', style="border:none;")
            h2 Groovy
            ul
              li Dynamic, compiled language for the Java Virtual Machine(JVM).
              li Interoperable with existing Java libraries
              li Concise, easy to read code
              li Used by many major companies including:
                ul.ul-inline
                  li <img src='./assets/img/CompanyAndProductLogos/netflix.jpg' class='inline-img'/>
                  li <img src='./assets/img/CompanyAndProductLogos/bestBuy.jpg' class='inline-img'/>
                  li <img src='./assets/img/CompanyAndProductLogos/target.png' class='inline-img'/>
                  li <img src='./assets/img/CompanyAndProductLogos/wellsfargo.jpg' class='inline-img'/>
                  li <img src='./assets/img/CompanyAndProductLogos/mutualOfOmaha.jpg' class='inline-img'/>
            aside.notes.
              Groovy is a dynamic compiled language for the JVM. That means it’s dynamic like languages you may
              know like Python and PHP, but compiled for efficiency to run on the Java Virtual Machine aka the JVM.
              Many of you may be asking, why learn yet another programming language? And granted, Groovy is not the best
              language for every situation.
              However, in a setting where productivity is paramount and you are looking for the stability of the known
              architecture stack like Java, Groovy is the best choice.
              As you’ll see, Groovy’s easy to learn, flexible syntax and interoperability with existing Java libraries, make
              it a great language to add to your repertoire.
              It's not just a prototyping solution and many companies use Groovy for enterprise solutions including Netflix,
              LinkedIn, and Mutual of Omaha.

          section
            img(src='./assets/img/grails.png', style="border:none;")
            h2 Grails
            ul
              li Groovy Based
              li Model View Controller(MVC) Web framework for the JVM
              li Convention over Configuration
              li Features including:
              ul
                li Object Relational Mapper(ORM)
                li Domain-Specific Languages(DSL)
                li Runtime and compile-time Metaprogramming
              li Extensive Plugin Support
              li Open-source community driven Project
          section
            h2 New in Grails 3
            ul
              li Based on Spring Boot
              li Switched to Gradle for build system
              li Major structural changes
              ul
                li Configuration
                li Scripts

        section
          h2 Example Task
          p Gr8Ladies Products
          ul
            li Catalog Products
            li Shopping Cart

        section
          h2 What is NoSQL?
          ul.fragment
            li.fragment Not Only SQL
            li.fragment Group of data storage <i>solutions</i> that are not Relational Database Management System(RDBMS)
            ul.fragment
              li Schema-less
              li Non-relational
          aside.notes.
            Originally NoSQL was used to refer to databases that did not use SQL or as 'not sql'.  Over time, the phrase
            has evolved to mean Not Only SQL.  As a broad definition, NoSQL describes a group of storage solutions
            that are not tabular like traditional relational databases.

        section
          h2 Goals of NoSQL
          ul
            li Volume
            li Velocity
            li Dependability
          aside.notes.
            NoSQL solutions try to solve problems of high volumes of data(more than fits on a single disk),
            many requests at the same time, and increased uptime.  Many of these solutions do so through
            distributing data over many nodes. Some solutions do this better than others.  As with most
            things(and a theme throughout this talk), optimizing for any one characteristic comes with trade-offs.

        section
          h2 CAP Theorem
          ul
            li Consistency
            li Availability
            li Partitioning

        section
          h2 Types of NoSQL solutions
          ul
            li Aggregate Stores
            ul
              li Key-value
              li Document
              li Column
            li Graph

        section
          h2 Key-value Stores
          img(src='./assets/img/KeyValuePair.jpg')

        section
          h2 Uses
          ul
            li Content Caching
            li Transient Data
            ul
              li Session Data
            li Image Stores
        section
          h2 Examples
          ul.ul-no-style
            li <img class="inline-img" src='./assets/img/CompanyAndProductLogos/memcached-logo.png'/>MemCached
            li <img class="inline-img" src='./assets/img/CompanyAndProductLogos/dynamo-db.png'/>DynamoDB
            li <img class="inline-img" src='./assets/img/CompanyAndProductLogos/redis-logo.png'/><b>Redis<sup>*</sup></b>
        section
          h2 Considerations
          ul
            li Relationships
            li Transactions
            li Querying
        section
          h2 Libraries & Plugins
          table
            tr
              th
              th
              th Status
            tr
              td <img class="inline-thumb" src='./assets/img/java-thumb.png'>
              td <a href="https://github.com/xetorthio/jedis" target="_blank">Jedis</a>
              td <img class="inline-thumb" src='./assets/img/active-icon.png'>
            tr
              td <img class="inline-thumb" src='./assets/img/grails-thumb.png'>
              td <a href="http://grails.org/plugin/redis" target="_blank">Grails Redis</a>
              td <img class="inline-thumb" src='./assets/img/active-icon.png'>
            tr
              td <img class="inline-thumb" src='./assets/img/grails-thumb.png'>
              td <a href="http://grails.org/plugin/redis-gorm" target="_blank">Redis GORM</a>
              td Last Updated June 2014
            tr
              td <img class="inline-thumb" src='./assets/img/grails-thumb.png'>
              td <a href="https://grails.org/plugin/memcached" target="_blank">Memcached 2nd-Level Cache Plugin</a>
              td Last Updated December 2011
            tr
              td <img class="inline-thumb" src='./assets/img/grails-thumb.png'>
              td <a href="http://grails.org/plugin/dynamodb" target="_blank">DynamoDB GORM</a>
              td Last Updated April 2012

        section
          h2 Document Stores
          img(src='./assets/img/Documents.jpg', height='65%', width='65%')
          aside.notes.
            Document stores are very similar to key value stores, but they allow for embedded structures
            and a concept of hierarchy
        section
          h2 Uses
          ul
            li Content Management Systems(CMS) / Blogging Platforms
            li Forms/data with many optional fields
            li Frequently Changing Schemas
        section
          h2 Examples
          ul.ul-no-style
            li <img class="inline-img" src='./assets/img/CompanyAndProductLogos/couchdb.png'/>CouchDB
            li <img class="inline-img" src='./assets/img/CompanyAndProductLogos/ravendb.png'/>RavenDB
            li <img class="inline-img" src='./assets/img/CompanyAndProductLogos/documentdb.png'/>Azure DocumentDB
            li <img class="inline-img" src='./assets/img/CompanyAndProductLogos/mongodb.png'/><b>MongoDB</b>
        section
          h2 Considerations
          ul
            li Complex transactions across documents
            li Complex searching
        aside.notes.
            especially if searching is within the embedded structures
        section
          h2 Libraries & Plugins
          table
            tr
              th
              th
              th Status
            tr
              td <img class="inline-thumb" src='./assets/img/groovy-thumb.png'>
              td <a href="https://github.com/poiati/gmongo" target="_blank">GMongo</a>
              td Last Updated March 2015
            tr
              td <img class="inline-thumb" src='./assets/img/grails-thumb.png'>
              td <a href="http://grails.org/plugin/mongodb" target="_blank">MongoDB GORM</a>
              td <img class="inline-thumb" src='./assets/img/active-icon.png'>
            tr
              td <img class="inline-thumb" src='./assets/img/grails-thumb.png'>
              td <a href="https://grails.org/plugin/gorm-couchdb" target="_blank">CouchDB GORM</a>
              td Last Updated April 2011

        section
          h2 Column Family
          img(src='./assets/img/ColumnFamily.jpg')
        section
          h2 Use Cases
          ul
            li CMS Systems/ Blogging Platforms
            li Log Aggregators
            li Incremental Counters
        section
          h2 Examples
          ul.ul-no-style
            li <img class="inline-img" src='./assets/img/CompanyAndProductLogos/cassandra.png'/>Cassandra
            li <img class="inline-img" src='./assets/img/CompanyAndProductLogos/hbase.png'/>HBase
            li <img class="inline-img" src='./assets/img/CompanyAndProductLogos/hypertable.jpg'/>Hypertable
        section
          h2 Considerations
          ul
            li Schema Changes
            li Arbitrary unstructured data
        section
          h2 To Learn More
          ul.ul-no-style
            li Grails and Cassandra
            li <a href="http://greachconf.com/speakers/jeff-beck-grails-and-cassandra/">http://greachconf.com/speakers/jeff-beck-grails-and-cassandra/</a>
            li vJUG Cassandra
            li <a href="https://www.youtube.com/watch?v=i3yUlwoCPzU">https://www.youtube.com/watch?v=i3yUlwoCPzU</a>

        section
          h2 Graph Databases
          img(src='./assets/img/GraphDatabase.jpg')

        section
          h2 Types
          ul
            li Labeled Property Graph
            li Hypergraphs
            li Triples (SPARQL)
          aside.notes.
            The figure I used is an example of a Labeled Property Graph.  It contains nodes and relationships and each node
            has properties which can be though of as key-value pairs. The relationships are named and have directionality.
            This is the most common type of graph database.
            The second type, a hypergraph, differs mainly by having a relationship connect any number of nodes. This is useful
            for modeling relationships where multiple nodes (say Alice and Bob) relate to multiple other nodes(say their 3 cars).
            Triple Stores are a semantic way of graphing data in examples that specify a subject, predicate, and then an object.
        section
          h2 Labeled Property Graph
          img(src='./assets/img/GraphDatabase.jpg')
        section
          h2 Hypergraphs
        section
          h2 Triples
          p SPARQL
        section
          h2 Uses
          ul
            li Social Networks
            li E-commerce Recommendations
            li Geo
            ul
              li Nearby Locations and Routing
        section
          h2 Examples
          ul.ul-no-style
            li <img class="inline-img" src='./assets/img/CompanyAndProductLogos/neo4j.png'/>Neo4J
            li <img class="inline-img" src='./assets/img/CompanyAndProductLogos/orientdb.png'/>OrientDB
            li <img class="inline-img" src='./assets/img/CompanyAndProductLogos/allegrograph.png'/>Allegro Graph
        section
          h2 Considerations
          ul
            li Deep tree traversals<sup>*</sup>
            li Very different way of thinking about data
        section
          h2 Libraries & Plugins
          table
            tr
              th
              th
              th Status
            tr
              td
              td Native REST API
              td <img class="inline-thumb" src="./assets/img/active-icon.png"/>
            tr
              td <img class="inline-thumb" src='./assets/img/grails-thumb.png'>
              td <a href="http://grails.org/plugin/neo4j" target="_blank">Neo4j GORM</a>
              td Last Updated June 2014

        section
          h2 Suggested Reading
          ul
            li Sadalage, Pramod J., and Martin Fowler. <ital>NoSQL Distilled: A Brief Guide to the Emerging World of Polyglot Persistence</ital>. Addison-Wesley Professional, 2012. Print.
            li Vardanyan, Mikayel. "Picking the Right NoSQL Database Tool." <ital>Monitis Blog</ital>. 22 May 2011. Web.
            li Copeland, Rick. <ital>MongoDB Applied Design Patterns</ital>. O'Reilly Media, 2013. Print.
            li Chinnachamy, Arun. <ital>Redis Applied Design Patterns</ital>. Packt Publishing, 2014. Print.
            li Robinson, Ian., Jim Webber, and Emil Eifrem. <ital>Graph Databases</ital>. O'Reilly Media, 2015. Print.

        section
          h2 How do I pick just one?
          div.fragment
            h3 You don't have to!
            img(src='./assets/img/toolset.jpg', style="border:none;")
        aside.notes.
          NoSQL data stores are meant to enhance existing solutions not be a one size fits all solution.  Mix and match for various tasks.

        section
          h3 Approach # 1
          p All In - <strong><code>MongoDB GORM</code></strong>

        section
          <img class="inline-img" src='./assets/img/CompanyAndProductLogos/mongodb.png'/>
          h3 MongoDB
          p Terminology
          ul
            li Databases
            li Collections
            li Document

        section
          h3 MongoDB Continued
          ul Highlights
            li Created When Needed
            ul
              li Databases
              li Collections
            li Optional Fields
            li BSON Object Ids over Integers

        section
          h3 Approach # 2
          p Partial - <strong><code>Grails-Redis plugin</code></strong>

        section
          <img class="inline-img" src='./assets/img/CompanyAndProductLogos/redis-logo.png'/>
          h3 Redis
          p Terminology
          ul
            li Keys
            li Types
            ul
              li String
              li Hash
              li Sets
        section
          h3 Highlights
          ul
            li Organized/Indexed Keys
            li CRUD operations
            li Key Expiration
            li Service Level Injection rather than all of GORM

        section
          h3 Conclusion
          ul
            li Picking a NoSQL solution depends on the problem
            li Not every tool is the right one for the job
            li NoSQL stores are valid alternatives to relational databases
            li NoSQL solutions are highly supported in Groovy and Grails
        section
          h3 Questions?
          <img src='./assets/img/halofunnyface.jpg' style="border:none;margin:0px;">
          <img src='./assets/img/pumpkinloaf.jpg' style="border:none;">
          <img src='./assets/img/upsidedownpumpkin.jpg' style="border:none;">
          <img src='./assets/img/halopanic.jpg' style="border:none;margin:0px;">


    script(src="./assets/js/app.js")

    // If the query includes 'print-pdf', use the PDF print sheet
    script(type='text/javascript').
      if( window.location.search.match( /print-pdf/gi ) ) {
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = './assets/css/print/pdf.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
      } else if ( window.location.search.match( /print-paper/gi ) ) {
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = './assets/css/print/paper.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
      }

